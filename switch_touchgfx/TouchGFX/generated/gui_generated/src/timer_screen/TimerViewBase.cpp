/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/timer_screen/TimerViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

TimerViewBase::TimerViewBase() :
    buttonCallback(this, &TimerViewBase::buttonCallbackHandler)
{
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    background_Screen21.setXY(0, 0);
    background_Screen21.setBitmap(Bitmap(BITMAP_BACKGROUND_SCREEN2_ID));

    buttonSettings.setXY(422, 10);
    buttonSettings.setBitmaps(Bitmap(BITMAP_CONFIGURATION_ID), Bitmap(BITMAP_CONFIGURATION_ID));
    buttonSettings.setAction(buttonCallback);

    textClock.setXY(-156, 109);
    textClock.setColor(touchgfx::Color::getColorFrom24BitRGB(186, 186, 186));
    textClock.setLinespacing(0);
    Unicode::snprintf(textClockBuffer1, TEXTCLOCKBUFFER1_SIZE, "%s", TypedText(T_SINGLEUSEID11).getText());
    textClock.setWildcard1(textClockBuffer1);
    Unicode::snprintf(textClockBuffer2, TEXTCLOCKBUFFER2_SIZE, "%s", TypedText(T_SINGLEUSEID12).getText());
    textClock.setWildcard2(textClockBuffer2);
    textClock.resizeToCurrentText();
    textClock.setTypedText(TypedText(T_SINGLEUSEID10));

    circle.setPosition(479, 36, 200, 200);
    circle.setCenter(100, 100);
    circle.setRadius(72);
    circle.setLineWidth(6);
    circle.setArc(0, 180);
    circle.setCapPrecision(90);
    circlePainter.setColor(touchgfx::Color::getColorFrom24BitRGB(186, 186, 186));
    circle.setPainter(circlePainter);

    add(background_Screen21);
    add(buttonSettings);
    add(textClock);
    add(circle);
}

void TimerViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void TimerViewBase::afterTransition()
{
    //MoveCircleIntoPlace
    //When screen is entered move circle
    //Move circle to x:140, y:36 with CubicOut easing in 750 ms (45 Ticks)
    circle.clearMoveAnimationEndedAction();
    circle.startMoveAnimation(140, 36, 45, EasingEquations::cubicEaseOut, EasingEquations::cubicEaseOut);

    //MoveTextClockIntoPlace
    //When screen is entered move textClock
    //Move textClock to x:162, y:109 with CubicOut easing in 750 ms (45 Ticks)
    textClock.clearMoveAnimationEndedAction();
    textClock.startMoveAnimation(162, 109, 45, EasingEquations::cubicEaseOut, EasingEquations::cubicEaseOut);
}

void TimerViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonSettings)
    {
        //ChangeToMain
        //When buttonSettings clicked change screen to Main
        //Go to Main with screen transition towards South
        application().gotoMainScreenSlideTransitionSouth();
    }
}
